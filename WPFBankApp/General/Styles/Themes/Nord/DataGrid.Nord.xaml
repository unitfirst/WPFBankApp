<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="Border" 
                                   Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" 
                                   SnapsToDevicePixels="True"/>

                        <Polygon x:Name="Arrow" 
                                 Fill="Black" 
                                 HorizontalAlignment="Right" 
                                 Margin="8,8,3,3" 
                                 Opacity="0.15" 
                                 Points="0,10 10,10 10,0" 
                                 Stretch="Uniform" 
                                 VerticalAlignment="Bottom"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" 
                                 Value="True">
                            <Setter Property="Stroke" 
                                    TargetName="Border" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" 
                                 Value="True">
                            <Setter Property="Fill" 
                                    TargetName="Border" 
                                    Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" 
                                 Value="False">
                            <Setter Property="Visibility" 
                                    TargetName="Arrow" 
                                    Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGrid}">

        <Setter Property="Margin"
                Value="0 4 0 0"/>

        <Setter Property="Grid.Column"
                Value="0"/>

        <Setter Property="Background"
                Value="{DynamicResource Color.DataGrid.Static.Background}"/>

        <Setter Property="AlternationCount"
                Value="2"/>

        <Setter Property="Foreground" 
                Value="{DynamicResource Color.Main.Light.Alice}"/>

        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="GridLinesVisibility"
                Value="Horizontal"/>

        <Setter Property="HorizontalGridLinesBrush"
                Value="{DynamicResource Color.Main.Onyx.Default}"/>

        <Setter Property="HeadersVisibility"
                Value="Column"/>

        <Setter Property="SelectionMode"
                Value="Single"/>

        <Setter Property="RowDetailsVisibilityMode" 
                Value="VisibleWhenSelected"/>

        <Setter Property="ScrollViewer.CanContentScroll" 
                Value="False"/>

        <Setter Property="VirtualizingPanel.ScrollUnit"
                Value="Pixel"/>

        <Setter Property="CanUserSortColumns"
                Value="True"/>

        <Setter Property="CanUserReorderColumns"
                Value="True"/>

        <Setter Property="CanUserResizeColumns"
                Value="True"/>

        <Setter Property="AutoGenerateColumns"
                Value="False"/>

        <Setter Property="IsReadOnly"
                Value="True"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">
                    <Border Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" 
                            Padding="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="True"
                            CornerRadius="10">
                        <ScrollViewer x:Name="DG_ScrollViewer" 
                                      Focusable="false">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                                Focusable="false" 
                                                Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Grid.Row="0" Grid.Column="1" 
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                CanContentScroll="{TemplateBinding CanContentScroll}" 
                                                                Grid.ColumnSpan="2" 
                                                                Grid.Row="1"/>

                                        <ScrollBar x:Name="PART_VerticalScrollBar" 
                                                   Grid.Column="2" 
                                                   Maximum="{TemplateBinding ScrollableHeight}" 
                                                   Orientation="Vertical" 
                                                   Grid.Row="1" 
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                   ViewportSize="{TemplateBinding ViewportHeight}" 
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <Grid Grid.Column="1" 
                                              Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                       Grid.Column="1" 
                                                       Maximum="{TemplateBinding ScrollableWidth}" 
                                                       Orientation="Horizontal" 
                                                       Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                       ViewportSize="{TemplateBinding ViewportWidth}" 
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" 
                               Value="true"/>

                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                               Value="false"/>
                </MultiTrigger.Conditions>

                <Setter Property="ScrollViewer.CanContentScroll" 
                        Value="false"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    
    <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Width" 
                Value="8"/>

        <Setter Property="Background" 
                Value="Transparent"/>

        <Setter Property="Cursor" 
                Value="SizeWE"/>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" 
                            Padding="{TemplateBinding Padding}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeaderStyle" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Margin"
                Value="0"/>

        <Setter Property="Padding"
                Value="15 5"/>

        <Setter Property="Height"
                Value="36"/>

        <Setter Property="Background"
                Value="{DynamicResource Color.DataGrid.Static.Background}"/>

        <Setter Property="Foreground"
                Value="LightGray"/>

        <Setter Property="BorderBrush"
                Value="Transparent"/>

        <Setter Property="BorderThickness"
                Value="0"/>

        <Setter Property="VerticalAlignment"
                Value="Center"/>

        <Setter Property="HorizontalAlignment"
                Value="Stretch"/>

        <Setter Property="FontSize"
                Value="12"/>

        <Setter Property="FontWeight"
                Value="Light"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{TemplateBinding Padding}">

                            <Grid Margin="{TemplateBinding Margin}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>

                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                                <StackPanel Grid.Column="1"
                                            Orientation="Horizontal"
                                            Margin="5 0 0 0">
                                    <Path x:Name="SortUpIcon"
                                      Data="{DynamicResource SortUp}"
                                      Height="{TemplateBinding FontSize}"
                                      Fill="{DynamicResource Color.Icon.Default}"
                                      Stretch="Uniform"
                                      Width="8"/>

                                    <Path x:Name="SortDownIcon"
                                      Data="{DynamicResource SortDown}"
                                      Height="{TemplateBinding FontSize}"
                                      Fill="{DynamicResource Color.Icon.Default}"
                                      Stretch="Uniform"
                                      Width="8"/>
                                </StackPanel>
                            </Grid>
                        </Border>
                        
                        <Thumb x:Name="PART_LeftHeaderGripper" 
                               HorizontalAlignment="Left" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        
                        <Thumb x:Name="PART_RightHeaderGripper" 
                               HorizontalAlignment="Right" 
                               Style="{StaticResource ColumnHeaderGripperStyle}"/>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="SortDirection"
                                 Value="Ascending">
                            <Setter TargetName="SortDownIcon"
                                    Property="Fill"
                                    Value="{DynamicResource Color.Icon.Active}"></Setter>
                        </Trigger>
                        
                        <Trigger Property="SortDirection" 
                                 Value="Descending">
                            <Setter TargetName="SortUpIcon"
                                    Property="Fill"
                                    Value="{DynamicResource Color.Icon.Active}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridRowStyle" 
           TargetType="{x:Type DataGridRow}">
        <Setter Property="SnapsToDevicePixels" 
                Value="true"/>

        <Setter Property="Background"
                Value="Transparent"/>

        <Setter Property="Height"
                Value="34"/>

        <Style.Triggers>
            
            <Trigger Property="IsNewItem" 
                     Value="True">
                <Setter Property="Margin" 
                        Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
            </Trigger>

            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" 
                        Value="{DynamicResource Color.DataGrid.AlternateRow.Static.Background}"></Setter>
            </Trigger>

            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" 
                        Value="{DynamicResource Color.DataGrid.Static.Background}"></Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Margin"
                Value="-1 0 0 0"/>
        
        <Setter Property="Padding"
                Value="14 0"/>

        <Setter Property="Height"
                Value="36"/>

        <Setter Property="Background" 
                Value="Transparent"/>

        <Setter Property="Foreground"
                Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DataGrid}}"/>

        <Setter Property="VerticalContentAlignment"
                Value="Center"/>

        <Setter Property="HorizontalContentAlignment"
                Value="Stretch"/>

        <Setter Property="BorderBrush" 
                Value="Transparent"/>

        <Setter Property="BorderThickness" 
                Value="0"/>

        <Setter Property="FontSize"
                Value="12"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Padding="{TemplateBinding Padding}" 
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Margin}">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsSelected" 
                     Value="True">
                <Setter Property="Background" 
                        Value="{DynamicResource Color.Main.Blue.Default}"/>

                <Setter Property="Foreground" 
                        Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
            </Trigger>

            <Trigger Property="IsKeyboardFocusWithin" 
                     Value="True">
                <Setter Property="BorderBrush" 
                        Value="{DynamicResource Color.Main.Blue.Default}"/>
            </Trigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" 
                               Value="true"/>

                    <Condition Property="Selector.IsSelectionActive" 
                               Value="false"/>
                </MultiTrigger.Conditions>

                <Setter Property="Background" 
                        Value="{DynamicResource Color.Main.Blue.Default}"/>

                <Setter Property="Foreground" 
                        Value="{DynamicResource Color.Main.Blue.Bright}"/>
            </MultiTrigger>

            <Trigger Property="IsEnabled" 
                     Value="false">
                <Setter Property="Foreground" 
                        Value="{DynamicResource Color.Main.Onyx.Light}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>